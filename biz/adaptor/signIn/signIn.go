// Code generated by hertz generator.

package signIn

import (
	"context"

	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"

	"SEproject/biz/application/dto/signIn"
	"SEproject/provider"
)

// SignIn .
// @router /sign_in [GET]
func SignIn(ctx context.Context, c *app.RequestContext) {
	var err error
	var req signIn.SignInReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	p := provider.Get()
	resp, err := p.SignInService.SignIn(ctx, &req)
	c.JSON(consts.StatusOK, resp)
}

// Register .
// @router /register [GET]
func Register(ctx context.Context, c *app.RequestContext) {
	var err error
	var req signIn.RegisterReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	p := provider.Get()
	resp, err := p.SignInService.Register(ctx, &req)
	c.JSON(consts.StatusOK, resp)
}

// ResetPw .
// @router /reset_pw [GET]
func ResetPw(ctx context.Context, c *app.RequestContext) {
	var err error
	var req signIn.ResetPwReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	p := provider.Get()
	resp, err := p.SignInService.ResetPw(ctx, &req)
	c.JSON(consts.StatusOK, resp)
}
